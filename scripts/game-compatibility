#!/bin/bash
# RaptorOS Game Compatibility Checker
# Checks ProtonDB and provides optimization suggestions

# Check game compatibility from ProtonDB
check_game_compatibility() {
    local game_name="$1"
    local steam_id="$2"
    
    if [ -z "$steam_id" ]; then
        # Try to find Steam ID from name
        steam_id=$(curl -s "https://api.steampowered.com/ISteamApps/GetAppList/v2/" | \
                   jq -r ".applist.apps[] | select(.name | test(\"$game_name\"; \"i\")) | .appid" | \
                   head -1)
    fi
    
    if [ -z "$steam_id" ]; then
        echo "Game not found. Please provide Steam ID."
        return 1
    fi
    
    # Query ProtonDB API
    local proton_data=$(curl -s "https://www.protondb.com/api/v1/reports/summaries/$steam_id.json")
    
    if [ $? -ne 0 ] || [ -z "$proton_data" ]; then
        echo "Unable to fetch ProtonDB data"
        return 1
    fi
    
    # Parse rating
    local rating=$(echo "$proton_data" | jq -r '.tier')
    local confidence=$(echo "$proton_data" | jq -r '.confidence')
    local report_count=$(echo "$proton_data" | jq -r '.total')
    
    # Display compatibility report
    dialog --backtitle "RaptorOS Game Compatibility" \
           --title "Game: $game_name (ID: $steam_id)" \
           --msgbox "\n\
ProtonDB Rating: $(format_rating $rating)\n\
Confidence: $confidence\n\
Reports: $report_count\n\n\
$(get_optimization_suggestions $rating $steam_id)\n\n\
For detailed reports visit:\n\
https://www.protondb.com/app/$steam_id" 20 70
}

# Format ProtonDB rating
format_rating() {
    case "$1" in
        "platinum") echo "🏆 Platinum - Runs perfectly" ;;
        "gold") echo "🥇 Gold - Runs great with tweaks" ;;
        "silver") echo "🥈 Silver - Minor issues" ;;
        "bronze") echo "🥉 Bronze - Major issues" ;;
        "borked") echo "💔 Borked - Doesn't work" ;;
        *) echo "❓ Unknown" ;;
    esac
}

# Get optimization suggestions
get_optimization_suggestions() {
    local rating=$1
    local steam_id=$2
    
    case "$rating" in
        "platinum")
            echo "Optimizations:\n\
• Use GameMode: gamemoderun %command%\n\
• Enable MangoHud for monitoring\n\
• No special configuration needed"
            ;;
        "gold")
            echo "Optimizations:\n\
• Launch options: PROTON_ENABLE_NVAPI=1 gamemoderun %command%\n\
• Try Proton-GE for better compatibility\n\
• Enable DXVK async: DXVK_ASYNC=1"
            ;;
        "silver")
            echo "Optimizations:\n\
• Use Proton Experimental or GE\n\
• Add: WINE_FULLSCREEN_FSR=1 for upscaling\n\
• Try: PROTON_NO_ESYNC=1 if crashes occur\n\
• Check community fixes on ProtonDB"
            ;;
        "bronze")
            echo "Warnings:\n\
• Expect significant issues\n\
• Check ProtonDB for community workarounds\n\
• Consider dual-boot for this title\n\
• Try Lutris with custom Wine build"
            ;;
        "borked")
            echo "Not Compatible:\n\
• Game doesn't work on Linux currently\n\
• Check for native alternatives\n\
• Consider GPU passthrough VM\n\
• Wait for Proton updates"
            ;;
    esac
}

# Interactive game checker
interactive_checker() {
    while true; do
        local choice=$(dialog --backtitle "RaptorOS Game Compatibility Checker" \
                             --title "Game Compatibility Checker" \
                             --inputbox "\nEnter game name or Steam ID:\n\n\
Examples:\n\
• Cyberpunk 2077\n\
• 1091500\n\
• Counter-Strike" 14 60 \
                             3>&1 1>&2 2>&3)
        
        if [ $? -ne 0 ] || [ -z "$choice" ]; then
            break
        fi
        
        # Check if numeric (Steam ID)
        if [[ "$choice" =~ ^[0-9]+$ ]]; then
            check_game_compatibility "" "$choice"
        else
            check_game_compatibility "$choice" ""
        fi
    done
}

# Main execution
if [ $# -eq 0 ]; then
    interactive_checker
else
    check_game_compatibility "$@"
fi
